이미지가 사용자 눈에 보이는 과정

1. 클라이언트가 서버에 이미지 요청
    <img src="경로"> 태그가 작성되어있으면 브라우저는 src에 있는 경로를 서버에 요청.
--> 클라이언트가 서버에 이미지 파일을 보내달라고 요청하는 HTTP 요청으로 처리

2. 서버의 실제 파일 경로와 클라이언트 요청 경로 연결

클라이언트 : A.jpg     (서버의 어느 경로에 A.jpg 가 있는지 모름)
--> /myPage/file/A.jpg 요청 

<img src="/myPage/file/A.jpg" />  --> 서버의 실제 경로 C:/uploadFiles/myPage/A.jpg


서버는 실제로 /myPage/file/** 이 요청 주소와 매핑되어있는 서버 경로를 찾음

만약에 클라이언트가  /myPage/file/** 요청을 보내면
서버의 실제 경로 C:/uploadFiles/myPage/   경로로 매핑하겠다!
--> 규칙 지정 

클라 : /board/file/test.jpg 
서버 : C:/uploadFiles/board/ 경로로 매핑하겠다


3. 서버는 실제 이미지가 있는 경로에서 이미지 파일을 찾아 클라이언트에게 응답

--> addResourceHandler("/myPage/file/**") : 클라이언트가 요청할 URL 경로 패턴 정의 
				(즉, 클라이언트가 /myPage/file/** 로 요청을 보낼 때 이 요청을 처리)
--> addResourceLocations("file:///C:/uploadFiles/myPage/") : 서버가 요청을 처리할 때 실제 파일 경로를 설정함.
				(즉, 이 경로에서 파일을 찾아 응답으로 보냄)

// -----------------------------------------------------------------------------------------------------------------------------------------------

사용자가 사용자 컴퓨터에 있는 이미지 파일을 사이트에 올렸을 때 서버 컴퓨터에 그 이미지가 저장되는 과정

클라이언트 컴퓨터에 있는 이미지를 서버 컴퓨터에 저장하기 위해서는, 
클라이언트가 <input type="file"> 을 통해 선택한 파일을 서버로 전송. HTTP 통해 전송

1. 클라이언트 파일 선택
- <input type="file"> 요소를 사용하여 컴퓨터에 있는 파일을 선택
- 파일을 선택하면 브라우저는 이 파일의 경로와 파일 내용 -> 메모리 로드 

2. 파일을 서버로 전송 (폼 데이터로 요청)
multipart/form-data 형식으로 전송
- 파일 객체 or 단순 텍스트 포함 

3. 서버가 파일 데이터 수신
(Spring) 클라이언트의 요청을 받고, 파일 데이터를 읽어서 서버의 지정된 폴더에 저장
-> 1. Controller에서 MultipartFile 객체를 사용해서 파일을 처리
--> MultipartFile 에 지정되어있는 설정을 통해서 서버가 파일을 지정된 위치에 저장
--> 클라이언트가 myPage에서 프로필 업로드를 요청했다
--> 서버의 C:/uploadeFiles/myPage/ 경로 이하에 MultipartFile 객체를 통해서 전달받은 파일을 저장하겠다.

--> 내가 업로드한 프로필 이미지를 마이페이지에서 확인하고싶어
--> <img src="/myPage/profile/A.jpg">
--> 서버 컴퓨터의 C:/uploadeFiles/myPage/ 매핑하여 A.jpg 찾아 응답


